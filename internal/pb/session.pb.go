// Copyright 2025 Bobby Powers. All rights reserved.
// Use of this source code is governed by the MIT
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: session.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SessionEnvelope wraps user session data with metadata.
// The envelope contains:
// - issued_at: timestamp when the session was created (for server-side expiry)
// - payload: user's protobuf message wrapped in Any for type safety
type SessionEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When this session was issued. Server uses this with MaxAge policy
	// to determine if session has expired.
	IssuedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	// User's session data as a protobuf Any message.
	Payload       *anypb.Any `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionEnvelope) Reset() {
	*x = SessionEnvelope{}
	mi := &file_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionEnvelope) ProtoMessage() {}

func (x *SessionEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionEnvelope.ProtoReflect.Descriptor instead.
func (*SessionEnvelope) Descriptor() ([]byte, []int) {
	return file_session_proto_rawDescGZIP(), []int{0}
}

func (x *SessionEnvelope) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *SessionEnvelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_session_proto protoreflect.FileDescriptor

const file_session_proto_rawDesc = "" +
	"\n" +
	"\rsession.proto\x12\x02pb\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"z\n" +
	"\x0fSessionEnvelope\x127\n" +
	"\tissued_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bissuedAt\x12.\n" +
	"\apayload\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\apayloadB+Z)github.com/bpowers/seshcookie/internal/pbb\x06proto3"

var (
	file_session_proto_rawDescOnce sync.Once
	file_session_proto_rawDescData []byte
)

func file_session_proto_rawDescGZIP() []byte {
	file_session_proto_rawDescOnce.Do(func() {
		file_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_session_proto_rawDesc), len(file_session_proto_rawDesc)))
	})
	return file_session_proto_rawDescData
}

var file_session_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_session_proto_goTypes = []any{
	(*SessionEnvelope)(nil),       // 0: pb.SessionEnvelope
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 2: google.protobuf.Any
}
var file_session_proto_depIdxs = []int32{
	1, // 0: pb.SessionEnvelope.issued_at:type_name -> google.protobuf.Timestamp
	2, // 1: pb.SessionEnvelope.payload:type_name -> google.protobuf.Any
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_session_proto_init() }
func file_session_proto_init() {
	if File_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_session_proto_rawDesc), len(file_session_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_session_proto_goTypes,
		DependencyIndexes: file_session_proto_depIdxs,
		MessageInfos:      file_session_proto_msgTypes,
	}.Build()
	File_session_proto = out.File
	file_session_proto_goTypes = nil
	file_session_proto_depIdxs = nil
}
